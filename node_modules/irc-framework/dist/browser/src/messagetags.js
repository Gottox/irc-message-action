'use strict';

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.map");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.object.create");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.replace");

require("core-js/modules/es.string.split");

require("core-js/modules/web.dom-collections.for-each");

var Helpers = require('./helpers');

module.exports.decodeValue = decodeValue;
module.exports.encodeValue = encodeValue;
module.exports.decode = decode;
module.exports.encode = encode;
var tokens_map = {
  '\\\\': '\\',
  '\\:': ';',
  '\\s': ' ',
  '\\n': '\n',
  '\\r': '\r',
  '\\': '' // remove invalid backslashes

};
var token_lookup = /\\\\|\\:|\\s|\\n|\\r|\\/gi;

function decodeValue(value) {
  return value.replace(token_lookup, function (m) {
    return tokens_map[m] || '';
  });
}

var vals_map = {
  '\\': '\\\\',
  ';': '\\:',
  ' ': '\\s',
  '\n': '\\n',
  '\r': '\\r'
};
var val_lookup = /\\|;| |\n|\r/gi;

function encodeValue(value) {
  return value.replace(val_lookup, function (m) {
    return vals_map[m] || '';
  });
}

function decode(tag_str) {
  var tags = Object.create(null);
  tag_str.split(';').forEach(function (tag) {
    var parts = Helpers.splitOnce(tag, '=');
    var key = parts[0].toLowerCase();
    var value = parts[1] || '';

    if (!key) {
      return;
    }

    value = decodeValue(value);
    tags[key] = value;
  });
  return tags;
}

function encode(tags) {
  var parts = Object.keys(tags).map(function (key) {
    var val = tags[key];

    if (typeof val === 'boolean') {
      return key;
    }

    return key + '=' + encodeValue(val.toString());
  });
  return parts.join(';');
}